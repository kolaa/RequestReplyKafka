/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.example.api;

import com.example.model.Account;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;
import java.util.concurrent.ExecutionException;

@Validated
public interface AccountsApi {

    @Operation(summary = "", description = "", tags={ "Accounts" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "Success", content = @Content(mediaType = "text/plain", array = @ArraySchema(schema = @Schema(implementation = Account.class)))) })
    @RequestMapping(value = "/Accounts/Rest/{clientId}",
        produces = { "text/plain", "application/json", "text/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Account>> accountsRestClientIdGet(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("clientId") Integer clientId);


    @Operation(summary = "", description = "", tags={ "Accounts" })
    @ApiResponses(value = {
            @ApiResponse(responseCode = "200", description = "Success", content = @Content(mediaType = "text/plain", array = @ArraySchema(schema = @Schema(implementation = Account.class)))) })
    @RequestMapping(value = "/Accounts/Kafka/{clientId}",
            produces = { "text/plain", "application/json", "text/json" },
            method = RequestMethod.GET)
    ResponseEntity<List<Account>> accountsKafkaClientIdGet(@Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("clientId") Integer clientId) throws ExecutionException, InterruptedException;

}

